From 28f04de3f62bd2931a9bfb242e19c067f9becfa4 Mon Sep 17 00:00:00 2001
From: Jacob Godserv <jacobgodserv@gmail.com>
Date: Thu, 27 May 2010 22:23:35 -0400
Subject: [PATCH 24/52] Typo fixes in HookFile

---
 pym/portage/hooks.py |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/pym/portage/hooks.py b/pym/portage/hooks.py
index 7db24d7..39de92a 100644
--- a/pym/portage/hooks.py
+++ b/pym/portage/hooks.py
@@ -58,14 +58,14 @@ class HookFile (object):
 		self.settings = settings
 	
 	def execute (self):
-		if "hooks" not in settings['FEATURES']:
+		if "hooks" not in self.settings['FEATURES']:
 			return
 		
-		if not os.path.exists(path):
-			raise InvalidLocation('This hook path could not be found: ' + path)
+		if not os.path.exists(self.path):
+			raise InvalidLocation('This hook path could not be found: ' + self.path)
 		
-		if os.path.isfile(path):
-			command=[path]
+		if os.path.isfile(self.path):
+			command=[self.path]
 			if self.myopts:
 				for myopt in self.myopts:
 					command.extend(['--opt', myopt])
@@ -78,10 +78,10 @@ class HookFile (object):
 			command=[BASH_BINARY, '-c', 'source ' + PORTAGE_BIN_PATH + '/isolated-functions.sh && source ' + ' '.join(command)]
 			code = spawn(mycommand=command, env=self.settings.environ())
 			if code: # if failure
-				raise PortageException('!!! Hook %s failed with exit code %s' % (path, code))
+				raise PortageException('!!! Hook %s failed with exit code %s' % (self.path, code))
 		
 		else:
-			raise InvalidLocation('This hook path ought to be a file: ' + path)
+			raise InvalidLocation('This hook path ought to be a file: ' + self.path)
 
 if __name__ == "__main__": # TODO: debug
 	from portage.package.ebuild.config import config
-- 
1.6.4.4

