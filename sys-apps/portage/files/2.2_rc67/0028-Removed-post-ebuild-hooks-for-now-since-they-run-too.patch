From aa67666df24be41250c304fa77950684fda5f4c3 Mon Sep 17 00:00:00 2001
From: Jacob Godserv <jacobgodserv@gmail.com>
Date: Thu, 27 May 2010 23:46:01 -0400
Subject: [PATCH 28/52] Removed post-ebuild hooks for now, since they run too early

---
 pym/portage/package/ebuild/doebuild.py |   33 --------------------------------
 1 files changed, 0 insertions(+), 33 deletions(-)

diff --git a/pym/portage/package/ebuild/doebuild.py b/pym/portage/package/ebuild/doebuild.py
index 006c7bc..7e0b43a 100644
--- a/pym/portage/package/ebuild/doebuild.py
+++ b/pym/portage/package/ebuild/doebuild.py
@@ -539,7 +539,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 			retval = spawn(_shell_quote(ebuild_sh_binary) + " clean",
 				mysettings, debug=debug, fd_pipes=fd_pipes, free=1,
 				logfile=None, returnpid=returnpid)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return retval
 
 		restrict = set(mysettings.get('PORTAGE_RESTRICT', '').split())
@@ -551,7 +550,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				mypids = spawn(_shell_quote(ebuild_sh_binary) + " depend",
 					mysettings, fd_pipes=fd_pipes, returnpid=True,
 					droppriv=droppriv)
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return mypids
 			elif isinstance(dbkey, dict):
 				mysettings["dbkey"] = ""
@@ -584,7 +582,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 					# Don't trust bash's returncode if the
 					# number of lines is incorrect.
 					retval = 1
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return retval
 			elif dbkey:
 				mysettings["dbkey"] = dbkey
@@ -595,7 +592,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 			retval = spawn(_shell_quote(ebuild_sh_binary) + " depend",
 				mysettings,
 				droppriv=droppriv)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return retval
 
 		# Validate dependency metadata here to ensure that ebuilds with invalid
@@ -605,7 +601,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 		if not returnpid:
 			rval = _validate_deps(mysettings, myroot, mydo, mydbapi)
 			if rval != os.EX_OK:
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return rval
 
 		if "PORTAGE_TMPDIR" not in mysettings or \
@@ -614,7 +609,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				"PORTAGE_TMPDIR variable, '%s',\n"
 				"does not exist.  Please create this directory or "
 				"correct your PORTAGE_TMPDIR setting.\n") % mysettings.get("PORTAGE_TMPDIR", ""), noiselevel=-1)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return 1
 		
 		# as some people use a separate PORTAGE_TMPDIR mount
@@ -629,7 +623,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 			writemsg(_("%s is not writable.\n"
 				"Likely cause is that you've mounted it as readonly.\n") % checkdir,
 				noiselevel=-1)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return 1
 		else:
 			fd = tempfile.NamedTemporaryFile(prefix="exectest-", dir=checkdir)
@@ -641,7 +634,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 					"Please make sure that portage can execute files in this directory.\n") % checkdir,
 					noiselevel=-1)
 				fd.close()
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return 1
 			fd.close()
 		del checkdir
@@ -649,7 +641,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 		if mydo == "unmerge":
 			retval = unmerge(mysettings["CATEGORY"],
 				mysettings["PF"], myroot, mysettings, vartree=vartree)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return retval
 
 		# Build directory creation isn't required for any of these.
@@ -662,7 +653,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 			not (mydo == 'fetch' and 'fetch' not in restrict):
 			mystatus = prepare_build_dirs(myroot, mysettings, cleanup)
 			if mystatus:
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return mystatus
 			have_build_dirs = True
 
@@ -731,7 +721,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 					for line in wrap(msg, 70):
 						eerror(line, phase="setup", key=mysettings.mycpv)
 					elog_process(mysettings.mycpv, mysettings)
-					HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 					return 1
 			del env_file, env_stat, saved_env
 			_doebuild_exit_status_unlink(
@@ -744,7 +733,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 		if mydo == "help":
 			retval = spawn(_shell_quote(ebuild_sh_binary) + " " + mydo,
 				mysettings, debug=debug, free=1, logfile=logfile)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return retval
 		elif mydo == "setup":
 			retval = spawn(
@@ -752,7 +740,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				debug=debug, free=1, logfile=logfile, fd_pipes=fd_pipes,
 				returnpid=returnpid)
 			if returnpid:
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return retval
 			retval = exit_status_check(retval)
 			if secpass >= 2:
@@ -761,7 +748,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				apply_recursive_permissions(mysettings["T"],
 					uid=portage_uid, gid=portage_gid, dirmode=0o70, dirmask=0,
 					filemode=0o60, filemask=0)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return retval
 		elif mydo == "preinst":
 			phase_retval = spawn(
@@ -770,7 +756,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				fd_pipes=fd_pipes, returnpid=returnpid)
 
 			if returnpid:
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return phase_retval
 
 			phase_retval = exit_status_check(phase_retval)
@@ -785,7 +770,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				if phase_retval != os.EX_OK:
 					writemsg(_("!!! post preinst failed; exiting.\n"),
 						noiselevel=-1)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return phase_retval
 		elif mydo == "postinst":
 			phase_retval = spawn(
@@ -794,7 +778,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				fd_pipes=fd_pipes, returnpid=returnpid)
 
 			if returnpid:
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return phase_retval
 
 			phase_retval = exit_status_check(phase_retval)
@@ -808,7 +791,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				if phase_retval != os.EX_OK:
 					writemsg(_("!!! post postinst failed; exiting.\n"),
 						noiselevel=-1)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return phase_retval
 		elif mydo in ("prerm", "postrm", "config", "info"):
 			retval =  spawn(
@@ -817,11 +799,9 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				fd_pipes=fd_pipes, returnpid=returnpid)
 
 			if returnpid:
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return retval
 
 			retval = exit_status_check(retval)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return retval
 
 		mycpv = "/".join((mysettings["CATEGORY"], mysettings["PF"]))
@@ -851,7 +831,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				writemsg(_("!!! Invalid SRC_URI for '%s'.\n") % mycpv,
 					noiselevel=-1)
 				del e
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return 1
 			mysettings.configdict["pkg"]["A"] = " ".join(alist)
 			mysettings.configdict["pkg"]["AA"] = " ".join(aalist)
@@ -863,7 +842,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 					fetchme = alist
 				if not fetch(fetchme, mysettings, listonly=listonly,
 					fetchonly=fetchonly):
-					HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 					return 1
 
 		else:
@@ -878,17 +856,14 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 			checkme = alist
 
 		if mydo == "fetch" and listonly:
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return 0
 
 		try:
 			if mydo == "manifest":
 				retval = digestgen(mysettings=mysettings, myportdb=mydbapi)
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return not retval
 			elif mydo == "digest":
 				retval = digestgen(mysettings=mysettings, myportdb=mydbapi)
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return not retval
 			elif mydo != 'fetch' and not emerge_skip_digest and \
 				"digest" in mysettings.features:
@@ -899,17 +874,14 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 		except PermissionDenied as e:
 			writemsg(_("!!! Permission Denied: %s\n") % (e,), noiselevel=-1)
 			if mydo in ("digest", "manifest"):
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return 1
 
 		# See above comment about fetching only when needed
 		if not emerge_skip_distfiles and \
 			not digestcheck(checkme, mysettings, "strict" in features):
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return 1
 
 		if mydo == "fetch":
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return 0
 
 		# remove PORTAGE_ACTUAL_DISTDIR once cvs/svn is supported via SRC_URI
@@ -1013,7 +985,6 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				os.path.join(mysettings["PORTAGE_BUILDDIR"], ".installed")):
 				writemsg(_("!!! mydo=qmerge, but the install phase has not been run\n"),
 					noiselevel=-1)
-				HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 				return 1
 			# qmerge is a special phase that implies noclean.
 			if "noclean" not in mysettings.features:
@@ -1042,10 +1013,8 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 					vartree=vartree, prev_mtimes=prev_mtimes)
 		else:
 			writemsg_stdout(_("!!! Unknown mydo: %s\n") % mydo, noiselevel=-1)
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return 1
 
-		HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 		return retval
 
 	finally:
@@ -1117,10 +1086,8 @@ def _validate_deps(mysettings, myroot, mydo, mydbapi):
 			portage.util.writemsg_level(x,
 				level=logging.ERROR, noiselevel=-1)
 		if mydo not in invalid_dep_exempt_phases:
-			HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 			return 1
 
-	HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 	return os.EX_OK
 
 # XXX This would be to replace getstatusoutput completely.
-- 
1.6.4.4

