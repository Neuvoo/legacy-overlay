From d0cbe7afade1b3cbf0c389d0bb30c42c869901a2 Mon Sep 17 00:00:00 2001
From: Jacob Godserv <jacobgodserv@gmail.com>
Date: Wed, 2 Jun 2010 16:33:11 -0400
Subject: [PATCH 33/52] Reverted remaining old post-ebuild implementation, and added new, improved post-ebuild code

---
 pym/portage/package/ebuild/doebuild.py |   17 +++++++----------
 1 files changed, 7 insertions(+), 10 deletions(-)

diff --git a/pym/portage/package/ebuild/doebuild.py b/pym/portage/package/ebuild/doebuild.py
index 7e0b43a..72d3716 100644
--- a/pym/portage/package/ebuild/doebuild.py
+++ b/pym/portage/package/ebuild/doebuild.py
@@ -589,10 +589,9 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 				mysettings["dbkey"] = \
 					os.path.join(mysettings.depcachedir, "aux_db_key_temp")
 
-			retval = spawn(_shell_quote(ebuild_sh_binary) + " depend",
+			return spawn(_shell_quote(ebuild_sh_binary) + " depend",
 				mysettings,
 				droppriv=droppriv)
-			return retval
 
 		# Validate dependency metadata here to ensure that ebuilds with invalid
 		# data are never installed via the ebuild command. Don't bother when
@@ -639,9 +638,8 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 		del checkdir
 
 		if mydo == "unmerge":
-			retval = unmerge(mysettings["CATEGORY"],
+			return unmerge(mysettings["CATEGORY"],
 				mysettings["PF"], myroot, mysettings, vartree=vartree)
-			return retval
 
 		# Build directory creation isn't required for any of these.
 		# In the fetch phase, the directory is needed only for RESTRICT=fetch
@@ -731,9 +729,8 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 		# if any of these are being called, handle them -- running them out of
 		# the sandbox -- and stop now.
 		if mydo == "help":
-			retval = spawn(_shell_quote(ebuild_sh_binary) + " " + mydo,
+			return spawn(_shell_quote(ebuild_sh_binary) + " " + mydo,
 				mysettings, debug=debug, free=1, logfile=logfile)
-			return retval
 		elif mydo == "setup":
 			retval = spawn(
 				_shell_quote(ebuild_sh_binary) + " " + mydo, mysettings,
@@ -860,11 +857,9 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 
 		try:
 			if mydo == "manifest":
-				retval = digestgen(mysettings=mysettings, myportdb=mydbapi)
-				return not retval
+				return not digestgen(mysettings=mysettings, myportdb=mydbapi)
 			elif mydo == "digest":
-				retval = digestgen(mysettings=mysettings, myportdb=mydbapi)
-				return not retval
+				return not digestgen(mysettings=mysettings, myportdb=mydbapi)
 			elif mydo != 'fetch' and not emerge_skip_digest and \
 				"digest" in mysettings.features:
 				# Don't do this when called by emerge or when called just
@@ -1041,6 +1036,8 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 			# If necessary, depend phase has been triggered by aux_get calls
 			# and the exemption is no longer needed.
 			portage._doebuild_manifest_exempt_depend -= 1
+		
+		HookDirectory(phase='post-ebuild', settings=mysettings, myopts=None, myaction=mydo, mytargets=[mysettings["EBUILD"]]).execute()
 
 def _validate_deps(mysettings, myroot, mydo, mydbapi):
 
-- 
1.6.4.4

