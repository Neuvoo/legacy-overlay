From acc4716ed7da1d943510dac281046e261837b87e Mon Sep 17 00:00:00 2001
From: Jacob Godserv <jacobgodserv@gmail.com>
Date: Tue, 8 Jun 2010 01:58:38 -0400
Subject: [PATCH 44/52] Better support for post-ebuild functionality; about to test

---
 bin/ebuild.sh                          |   18 +-----------------
 bin/hooks.sh                           |   28 ++++++++++++++++++++++++++++
 pym/portage/package/ebuild/doebuild.py |    4 ++--
 3 files changed, 31 insertions(+), 19 deletions(-)

diff --git a/bin/ebuild.sh b/bin/ebuild.sh
index 7e94f46..9347953 100755
--- a/bin/ebuild.sh
+++ b/bin/ebuild.sh
@@ -1757,23 +1757,7 @@ preprocess_ebuild_env() {
 }
 
 # Process pre-ebuild hook
-oldwd="$(pwd)"
-hooks_tmpdir="${T}/hooks"
-hooks_dir="${PORTAGE_CONFIGROOT}/${HOOKS_PATH}/pre-ebuild.d"
-( [ ! -d "${hooks_dir}" ] && exit 1 ) || cd "${hooks_dir}"
-exit_code="$?"
-if [[ "${exit_code}" != "0" ]]; then
-	# mimicks behavior in hooks.py
-	debug-print "This hook path could not be found; ignored: ${hooks_dir}"
-else
-	mkdir "${hooks_tmpdir}" && source "${HOOKS_SH_BINARY}" --action "${EBUILD_PHASE}" --target "${EBUILD}"
-	exit_code="$?"
-	if [[ "${exit_code}" != "0" ]]; then
-		# mimicks behavior in hooks.py
-		die "Hook directory ${HOOKS_PATH}/pre-ebuild.d failed with exit code ${exit_code}"
-	fi
-fi
-cd "${oldwd}" || die "Could not return to the old ebuild directory after pre-ebuild hooks: ${oldwd}"
+source "${HOOKS_SH_BINARY}" --do-pre-ebuild
 
 # === === === === === === === === === === === === === === === === === ===
 # === === === === === functions end, main part begins === === === === ===
diff --git a/bin/hooks.sh b/bin/hooks.sh
index 4d73a2d..1a672a9 100755
--- a/bin/hooks.sh
+++ b/bin/hooks.sh
@@ -10,6 +10,34 @@
 # hooks within a prepared environment, as well as acting as an API interface
 # between hooks and portage.
 
+# This code is put here so it's easier to do one-liners elsewhere.
+if [[ "$1" == "--do-pre-ebuild" || "$1" == "--do-post-ebuild" ]]; then
+	if hasq hooks $FEATURES ; then
+		oldwd="$(pwd)"
+		hooks_tmpdir="${T}/hooks"
+		if [[ "$1" == "--do-pre-ebuild" ]]; then
+			hooks_dir="${PORTAGE_CONFIGROOT}/${HOOKS_PATH}/pre-ebuild.d"
+		else
+			hooks_dir="${PORTAGE_CONFIGROOT}/${HOOKS_PATH}/post-ebuild.d"
+		fi
+		( [ ! -d "${hooks_dir}" ] && exit 1 ) && cd "${hooks_dir}"
+		exit_code="$?"
+		if [[ "${exit_code}" != "0" ]]; then
+			# mimicks behavior in hooks.py
+			debug-print "This hook path could not be found; ignored: ${hooks_dir}"
+		else
+			mkdir "${hooks_tmpdir}" && source "${HOOKS_SH_BINARY}" --action "${EBUILD_PHASE}" --target "${EBUILD}"
+			exit_code="$?"
+			if [[ "${exit_code}" != "0" ]]; then
+				# mimicks behavior in hooks.py
+				die "Hook directory ${HOOKS_PATH}/pre-ebuild.d failed with exit code ${exit_code}"
+			fi
+		fi
+		cd "${oldwd}" || die "Could not return to the old ebuild directory after pre-ebuild hooks: ${oldwd}"
+	fi
+	
+	return
+fi
 
 # Local variables listed here.
 # Using the local keyword makes no difference since this script is being sourced
diff --git a/pym/portage/package/ebuild/doebuild.py b/pym/portage/package/ebuild/doebuild.py
index 72d3716..874527d 100644
--- a/pym/portage/package/ebuild/doebuild.py
+++ b/pym/portage/package/ebuild/doebuild.py
@@ -936,8 +936,8 @@ def doebuild(myebuild, mydo, myroot, mysettings, debug=0, listonly=0,
 
 		fakeroot = "fakeroot" in mysettings.features
 
-		ebuild_sh = _shell_quote(ebuild_sh_binary) + " %s"
-		misc_sh = _shell_quote(misc_sh_binary) + " dyn_%s"
+		ebuild_sh = _shell_quote(ebuild_sh_binary) + " %s && source \""+HOOKS_SH_BINARY+"\" --do-post-ebuild"
+		misc_sh = _shell_quote(misc_sh_binary) + " dyn_%s && source \""+HOOKS_SH_BINARY+"\" --do-post-ebuild"
 
 		# args are for the to spawn function
 		actionmap = {
-- 
1.6.4.4

